{"version":3,"file":"static/js/437.e7b0b29b.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","pages/stylePages.module.css","pages/MoviesDetails.jsx","services/api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { requestCasts } from 'services/api';\n\nconst Cast = () => {\n  const [fetchResultCast, setFetchResultCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchCast = async () => {\n      try {\n        const result = await requestCasts(movieId);\n        setFetchResultCast(result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div className=\"cast-container\">\n      {fetchResultCast?.cast?.length > 0 ? (\n        <ul className=\"cast-list\">\n          {fetchResultCast.cast.map((el) => (\n            <li key={el.id} className=\"cast-item\">\n              <div className=\"cast-image\">\n                <img\n                  src={`http://image.tmdb.org/t/p/w300${el.profile_path}`}\n                  alt=\"Actor\"\n                  className=\"actor-image\"\n                />\n              </div>\n              <div className=\"cast-details\">\n                <p className=\"actor-name\">{el.original_name}</p>\n                <p className=\"actor-character\">Character: {el.character}</p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className=\"no-cast-info\">No information about the film cast</p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { requestReviews } from 'services/api';\n\nconst Reviews = () => {\n  const [fetchResultReviews, setFetchResultReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const results = await requestReviews(movieId);\n        setFetchResultReviews(results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <div className=\"content is-normal\">\n      <ul>\n        {fetchResultReviews?.results?.length > 0 ? (\n          fetchResultReviews.results.map(el => (\n            <li key={el.id}>\n              <p>Author: {el.author}</p>\n              {el.content ? <p>{el.content}</p> : <p>No reviews available</p>}\n            </li>\n          ))\n        ) : (\n          <li>\n            <p>No reviews available</p>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","// extracted by mini-css-extract-plugin\nexport default {};","import Cast from 'components/Cast/Cast';\nimport Loader from 'components/Loader/Loader';\nimport Reviews from 'components/Reviews/Reviews';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Route, Routes, useLocation, useParams } from 'react-router-dom';\nimport { requestDetails } from 'services/api';\nimport styles from './stylePages.module.css';\n\nconst MoviesDetails = () => {\n  const [ResultMovieDetailse, setResultMovieDetailse] = useState();\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backMoviesPageRef = useRef(location.state?.from);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovieDetails = async () => {\n      try {\n        const data = await requestDetails(movieId);\n\n        setResultMovieDetailse(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      <div>\n        <Link className=\"button is-dark\" to={backMoviesPageRef.current ?? '/'}>\n          Go back\n        </Link>\n        {ResultMovieDetailse && (\n          <div\n            key={ResultMovieDetailse.id}\n            className={styles.movieDetailseWrap}\n          >\n            <img\n              src={`https://image.tmdb.org/t/p/w500${ResultMovieDetailse.poster_path}`}\n              alt={ResultMovieDetailse.title}\n              className={styles.movieDetailseImg}\n            />\n            <div className={styles.movieDetailseDescr}>\n              <h1>{ResultMovieDetailse.original_title}</h1>\n              <p>User Score {ResultMovieDetailse.popularity}</p>\n              <h2>Overview</h2>\n              <p>{ResultMovieDetailse.overview}</p>\n              <h3>Genres</h3>\n              <ul>\n                {ResultMovieDetailse.genres.map(genre => (\n                  <p key={genre.id}>{genre.title || genre.name}</p>\n                ))}\n              </ul>\n            </div>\n          </div>\n        )}\n      </div>\n      <div>\n        <h3 className=\"title is-4\"> Additional information</h3>\n        <Link to=\"cast\" className=\"title is-6\">\n          Cast\n        </Link>\n        <Link to=\"reviews\" className=\"title is-6 is-light\">\n          /Reviews\n        </Link>\n      </div>\n      <div>\n        <Suspense fallback={<Loader />}>\n          <Routes>\n            <Route path=\"cast\" element={<Cast />} />\n            <Route path=\"reviews\" element={<Reviews />} />\n          </Routes>\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f2ffea4938b1399a0724ac9ef0692c2b';\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    language: 'en-US',\n    api_key: API_KEY,\n  },\n});\n\nexport const requestTrendMovies = async () => {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n};\nexport const requestMovies = async inputValue => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: inputValue,\n    },\n  });\n\n  return data;\n};\n\nexport const requestDetails = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const requestCasts = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/casts`);\n\n  return data;\n};\nexport const requestReviews = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews`);\n\n  return data;\n};\n"],"names":["_fetchResultCast$cast","_useState","useState","_useState2","_slicedToArray","fetchResultCast","setFetchResultCast","movieId","useParams","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","prev","next","requestCasts","sent","t0","console","log","stop","apply","arguments","_jsx","className","children","cast","length","map","el","_jsxs","src","concat","profile_path","alt","original_name","character","id","_fetchResultReviews$r","fetchResultReviews","setFetchResultReviews","fetchReviews","results","requestReviews","message","author","content","_location$state","_backMoviesPageRef$cu","ResultMovieDetailse","setResultMovieDetailse","location","useLocation","backMoviesPageRef","useRef","state","from","fetchMovieDetails","data","requestDetails","Link","to","current","styles","poster_path","title","original_title","popularity","overview","genres","genre","name","Suspense","fallback","Loader","Routes","Route","path","element","Cast","Reviews","instance","axios","baseURL","params","language","api_key","requestTrendMovies","_yield$instance$get","get","abrupt","requestMovies","_ref2","_callee2","inputValue","_yield$instance$get2","_context2","query","_x","_ref3","_callee3","_yield$instance$get3","_context3","_x2","_ref4","_callee4","_yield$instance$get4","_context4","_x3","_ref5","_callee5","_yield$instance$get5","_context5","_x4"],"sourceRoot":""}