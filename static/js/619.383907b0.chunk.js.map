{"version":3,"file":"static/js/619.383907b0.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MoviesPage_form__2deBf\",\"input\":\"MoviesPage_input__16dJ5\",\"button\":\"MoviesPage_button__AUtxX\",\"movieOverlay\":\"MoviesPage_movieOverlay__O2-kg\",\"poster\":\"MoviesPage_poster__oMK4j\",\"movieInfo\":\"MoviesPage_movieInfo__uMa+H\",\"movieTitle\":\"MoviesPage_movieTitle__o-ghW\",\"score\":\"MoviesPage_score__yqMgV\"};","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { requestMovies } from '../../services/api';\nimport noposter from '../../images/noposter.png';\nimport styles from './MoviesPage.module.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst MoviesPage = () => {\n  const [searchMovie, setsearchedMovie] = useState([]);\n  const [params, setUseParams] = useSearchParams();\n  const location = useLocation();\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setUseParams({ query: event.currentTarget.elements.inputQuery.value });\n  };\n  const queryValue = params.get('query');\n\n  useEffect(() => {\n    if (!queryValue) {\n      return;\n    }\n    const fetchMovies = async () => {\n      try {\n        const { results } = await requestMovies(queryValue);\n        setsearchedMovie(results);\n      } catch (error) {\n        toast.error(error.message);\n      }\n    };\n    fetchMovies(queryValue);\n  }, [queryValue]);\n\n  return (\n    <div>\n      <ToastContainer />\n      <form onSubmit={onSubmit}>\n        <input\n          className={`${styles.input} is-warning`}\n          placeholder=\"search for a movie...\"\n          type=\"text\"\n          name=\"inputQuery\"\n          defaultValue={queryValue}\n        />\n        <button className={`${styles.button} is-success`} type=\"submit\">\n          search\n        </button>\n        <ul className={`${styles.moviesList}`}>\n          {searchMovie.map(movie => (\n            <li key={movie.id} className={`${styles.movieItem}`}>\n              <Link\n                state={{ from: location }}\n                to={`/movies/${movie.id}`}\n                className={`${styles.movieLink}`}\n              >\n                <div className={`${styles.movieOverlay}`}> \n                  <img\n                    src={\n                      movie.poster_path\n                        ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                        : `${noposter}`\n                    }\n                    alt={movie.title}\n                    height=\"446px\"\n                    className={`${styles.poster}`} \n                  />\n                  <div className={`${styles.movieInfo}`}> \n                    <h2 className={`${styles.movieTitle}`}> \n                      {movie.title || movie.name}\n                    </h2>\n                    <p className={`${styles.score}`}>Score: {movie.vote_average}</p> \n                    <h3 className={`${styles.moviesHeading}`}>Overview:</h3> \n                    <p className={`${styles.movieP}`}>{movie.overview}</p> \n                  </div>\n                </div>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </form>\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f2ffea4938b1399a0724ac9ef0692c2b';\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    language: 'en-US',\n    api_key: API_KEY,\n  },\n});\n\nexport const requestTrendMovies = async () => {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n};\nexport const requestMovies = async inputValue => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: inputValue,\n    },\n  });\n\n  return data;\n};\n\nexport const requestDetails = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const requestCasts = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/casts`);\n\n  return data;\n};\nexport const requestReviews = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews`);\n\n  return data;\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","searchMovie","setsearchedMovie","_useSearchParams","useSearchParams","_useSearchParams2","params","setUseParams","location","useLocation","queryValue","get","useEffect","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$requestMovies","results","_context","prev","next","requestMovies","sent","t0","toast","message","stop","apply","arguments","_jsxs","children","_jsx","ToastContainer","onSubmit","event","preventDefault","query","currentTarget","elements","inputQuery","value","className","concat","styles","placeholder","type","name","defaultValue","map","movie","Link","state","from","to","id","src","poster_path","alt","title","height","vote_average","overview","instance","axios","baseURL","language","api_key","requestTrendMovies","_yield$instance$get","data","abrupt","_ref2","_callee2","inputValue","_yield$instance$get2","_context2","_x","requestDetails","_ref3","_callee3","movieId","_yield$instance$get3","_context3","_x2","requestCasts","_ref4","_callee4","_yield$instance$get4","_context4","_x3","requestReviews","_ref5","_callee5","_yield$instance$get5","_context5","_x4"],"sourceRoot":""}