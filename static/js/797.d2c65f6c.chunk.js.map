{"version":3,"file":"static/js/797.d2c65f6c.chunk.js","mappings":"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","sources":["pages/MoviesPage.jsx","services/api.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nimport { requestMovies } from '../services/api';\nconst MoviesPage = () => {\n  const [searchMovie, setsearchedMovie] = useState([]);\n  const [params, setUseParams] = useSearchParams();\n  const location = useLocation();\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setUseParams({ query: event.currentTarget.elements.inputQuery.value });\n  };\n  const queryValue = params.get('query');\n\n  useEffect(() => {\n    if (!queryValue) {\n      return;\n    }\n    const fetchMovies = async () => {\n      try {\n        const { results } = await requestMovies(queryValue);\n        setsearchedMovie(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovies(queryValue);\n  }, [queryValue]);\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          className=\"input is-warning\"\n          placeholder=\"search for a movie...\"\n          type=\"text\"\n          name=\"inputQuery\"\n          defaultValue={queryValue}\n        />\n        <button className=\"button is-success\" type=\"submit\">\n          search\n        </button>\n        <ul>\n          {searchMovie.map(movie => (\n            <li key={movie.id} className=\"title is-6\">\n              <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n                {movie.title || movie.name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </form>\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f2ffea4938b1399a0724ac9ef0692c2b';\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    language: 'en-US',\n    api_key: API_KEY,\n  },\n});\n\nexport const requestTrendMovies = async () => {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n};\nexport const requestMovies = async inputValue => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: inputValue,\n    },\n  });\n\n  return data;\n};\n\nexport const requestDetails = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const requestCasts = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/casts`);\n\n  return data;\n};\nexport const requestReviews = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews`);\n\n  return data;\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","searchMovie","setsearchedMovie","_useSearchParams","useSearchParams","_useSearchParams2","params","setUseParams","location","useLocation","queryValue","get","useEffect","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$requestMovies","results","_context","prev","next","requestMovies","sent","t0","console","log","stop","apply","arguments","_jsx","children","_jsxs","onSubmit","event","preventDefault","query","currentTarget","elements","inputQuery","value","className","placeholder","type","name","defaultValue","map","movie","Link","state","from","to","concat","id","title","instance","axios","baseURL","language","api_key","requestTrendMovies","_yield$instance$get","data","abrupt","_ref2","_callee2","inputValue","_yield$instance$get2","_context2","_x","requestDetails","_ref3","_callee3","movieId","_yield$instance$get3","_context3","_x2","requestCasts","_ref4","_callee4","_yield$instance$get4","_context4","_x3","requestReviews","_ref5","_callee5","_yield$instance$get5","_context5","_x4"],"sourceRoot":""}